//
// Created by user on 23.08.2019.
//

#ifndef LNK_JUMP_LIST_PARSER_SHELLLINKHEADER_H
#define LNK_JUMP_LIST_PARSER_SHELLLINKHEADER_H

#include <vector>
#include <iostream>
#include <algorithm>
#include <sstream>
#include <iterator>
#include "ShellLinkHeader.h"
#include "ShellLinkHeaderConstants.h"

/*!
    @class ShellLinkHeader
    Класс производит разбор заголовка для Shell Link (.LNK) Binary File Format.
    Докуметация структуры: 2.1 ShellLinkHeader
    https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-shllink/c3376b21-0931-45e4-b2fc-a48ac0e60d15 */
class ShellLinkHeader {
private:
    // 76 байт
    /// Поле содержит размер структуры ShellLinkHeader. Занимает 4 байта.
    std::vector<unsigned int> HeaderSize;           //MUST be 0x0000004C
    /// Поле содержит class identifier (CLSID). Занимает 16 байт.
    std::vector<unsigned int> LinkCLSID;            //MUST be 00021401-0000-0000-C000-000000000046
    /// Поле содержит флаги структуры ShellLinkHeader. Занимает 4 байта.
    std::vector<unsigned int> LinkFlags;
    /// Поле содержит атрибуты файла структуры ShellLinkHeader. Занимает 4 байта.
    std::vector<unsigned int> FileAttributes;
    /// Поле содержит время создания целевого файла. Занимает 8 байт.
    std::vector<unsigned int> CreationTime;
    /// Поле содержит время доступа к целевому файлу. Занимает 8 байт.
    std::vector<unsigned int> AccessTime;
    /// Поле содержит время записи в целевой файл. Занимает 8 байт.
    std::vector<unsigned int> WriteTime;
    /// Поле содержит размер целевого файла в байтах. Занимает 4 байта.
    std::vector<unsigned int> FileSize;
    /// Поле содержит индекс иконки в заданном местоположении иконки. Занимает 4 байта.
    std::vector<unsigned int> IconIndex;
    /// Поле содержит ожидаемое состояние окна приложения, запущенного по ссылке. Занимает 4 байта.
    std::vector<unsigned int> ShowCommand;         // 3 значения
    /// Поле содержит клавиши для запуска приложения, на которое ссылается ярлык. Занимает 2 байта.
    std::vector<unsigned int> HotKey;
    /// Поле содержит зарезервированное значение. Занимает 2 байта.
    std::vector<unsigned int> Reserved1;           //MUST be zero
    /// Поле содержит зарезервированное значение. Занимает 4 байта.
    std::vector<unsigned int> Reserved2;           //MUST be zero
    /// Поле содержит зарезервированное значение. Занимает 4 байта.
    std::vector<unsigned int> Reserved3;           //MUST be zero

    /* ----------------------------------------------------------------------------------------------- */
    /*! Функиця для разбора данных в поля структуры ShellLinkHeader.
        @param header Вектор символов, содержащий всю информацию заголовка .lnk файла.
        @return void                                                                                   */
    /* ----------------------------------------------------------------------------------------------- */
    void fillShellLinkHeader(std::vector<unsigned char> header);
    /* ----------------------------------------------------------------------------------------------- */
    /*! Функция отображения справа налево всех полей структуры ShellLinkHeader.
        @return void                                                                                   */
    /* ----------------------------------------------------------------------------------------------- */
    void reverseAllFields();

public:
    /* ----------------------------------------------------------------------------------------------- */
    /*! Конструктор с параметрами.
        @param header Вектор символов, содержащий всю информацию заголовка заголовка .lnk файла.       */
    /* ----------------------------------------------------------------------------------------------- */
    ShellLinkHeader(std::vector<unsigned char> header);

    /* ----------------------------------------------------------------------------------------------- */
    /*! Функция установки значения в переменную HLTIDListIsSet.
        @param hltidListIsSet Значение для поля HLTIDListIsSet.
        @return void                                                                                   */
    /* ----------------------------------------------------------------------------------------------- */
    static void setHltidListIsSet(bool hltidListIsSet);
    /* ----------------------------------------------------------------------------------------------- */
    /*! Функция установки значения в переменную HLIIsSet.
        @param hliIsSet Значение для поля HLIIsSet
        @return void                                                                                   */
    /* ----------------------------------------------------------------------------------------------- */
    static void setHliIsSet(bool hliIsSet);
    /* ----------------------------------------------------------------------------------------------- */
    /*! Функция установки значения в переменную HasNameSet.
        @param hasNameSet Значение для поля HasNameSet.
        @return void                                                                                   */
    /* ----------------------------------------------------------------------------------------------- */
    static void setHasNameSet(bool hasNameSet);
    /* ----------------------------------------------------------------------------------------------- */
    /*! Функция установки значения в переменную HasRelativePathSet.
        @param hasRelativePathSet Значение для поля HasRelativePathSet.
        @return void                                                                                   */
    /* ----------------------------------------------------------------------------------------------- */
    static void setHasRelativePathSet(bool hasRelativePathSet);
    /* ----------------------------------------------------------------------------------------------- */
    /*! Функция установки значения в переменную HasWorkingDirSet.
        @param hasWorkingDirSet Значение для поля HasWorkingDirSet.
        @return void                                                                                   */
    /* ----------------------------------------------------------------------------------------------- */
    static void setHasWorkingDirSet(bool hasWorkingDirSet);
    /* ----------------------------------------------------------------------------------------------- */
    /*! Функция установки значения в переменную HasArgumentsSet.
        @param hasArgumentsSet Значение для поля HasArgumentsSet.
        @return void                                                                                   */
    /* ----------------------------------------------------------------------------------------------- */
    static void setHasArgumentsSet(bool hasArgumentsSet);
    /* ----------------------------------------------------------------------------------------------- */
    /*! Функция установки значения в переменную HasIconLocationSet.
        @param hasIconLocationSet Значение для поля HasIconLocationSet.
        @return void                                                                                   */
    /* ----------------------------------------------------------------------------------------------- */
    static void setHasIconLocationSet(bool hasIconLocationSet);
    /* ----------------------------------------------------------------------------------------------- */
    /*! Функция установки значения в переменную HasDarwinIDSet.
        @param hasDarwinIdSet Значение для поля HasDarwinIDSet.
        @return void                                                                                   */
    /* ----------------------------------------------------------------------------------------------- */
    static void setHasDarwinIdSet(bool hasDarwinIdSet);
    /* ----------------------------------------------------------------------------------------------- */
    /*! Функция установки значения в переменную HasExpStringSet.
        @param hasExpStringSet Значение для поля HasExpStringSet.
        @return void                                                                                   */
    /* ----------------------------------------------------------------------------------------------- */
    static void setHasExpStringSet(bool hasExpStringSet);
    /* ----------------------------------------------------------------------------------------------- */
    /*! Функция установки значения в переменную HasExpIconSet.
        @param hasExpIconSet Значение для поля HasExpIconSet.
        @return void                                                                                   */
    /* ----------------------------------------------------------------------------------------------- */
    static void setHasExpIconSet(bool hasExpIconSet);
    /* ----------------------------------------------------------------------------------------------- */
    /*! Функция установки значения в переменную EnableTargetMetadataSet.
        @param enableTargetMetadataSet Значение для поля EnableTargetMetadataSet.
        @return void                                                                                   */
    /* ----------------------------------------------------------------------------------------------- */
    static void setEnableTargetMetadataSet(bool enableTargetMetadataSet);
    /* ----------------------------------------------------------------------------------------------- */
    /*! Функция установки значения в переменную RunWithShimLayerSet.
        @param runWithShimLayerSet Значение для поля RunWithShimLayerSet.
        @return void                                                                                   */
    /* ----------------------------------------------------------------------------------------------- */
    static void setRunWithShimLayerSet(bool runWithShimLayerSet);
    /* ----------------------------------------------------------------------------------------------- */
    /*! Функция установки значения в переменную ForceNoLinkTrackSet.
        @param forceNoLinkTrackSet Значение для поля ForceNoLinkTrackSet.
        @return void                                                                                   */
    /* ----------------------------------------------------------------------------------------------- */
    static void setForceNoLinkTrackSet(bool forceNoLinkTrackSet);

    /* ----------------------------------------------------------------------------------------------- */
    /*! Функция вывода разобранной информации, содержащейся в ShellLinkHeader, в 16-ричном формате.
        @return void                                                                                   */
    /* ----------------------------------------------------------------------------------------------- */
    void printHeaderInHexStyle();
    /* ----------------------------------------------------------------------------------------------- */
    /*! Функция вывода разобранной информации, содержащейся в ShellLinkHeader, в текстовом формате.
        @return void                                                                                   */
    /* ----------------------------------------------------------------------------------------------- */
    void printHeader();
    /* ----------------------------------------------------------------------------------------------- */
    /*! Функиця проверки валидности заголовка .lnk  файла.
        @return bool Возвращает true если заголовок валиден, false - если не валиден. */
    /* ----------------------------------------------------------------------------------------------- */
    bool isHeaderValid();
    /* ----------------------------------------------------------------------------------------------- */
    /*! Функция вывода информации по занным флагам поля LinkFlags.
        @param flags Значение поля LinkFlags.
        @return void                                                                                   */
    /* ----------------------------------------------------------------------------------------------- */
    void parseLinkFlags(unsigned int flags);
    /* ----------------------------------------------------------------------------------------------- */
    /*! Функция вывода информации по занным атрибутам файла поля FileAttributesFlags.
        @param flags Значение поля FileAttributesFlags.
        @return void                                                                                   */
    /* ----------------------------------------------------------------------------------------------- */
    void parseFileAttributesFlags(unsigned int flags);
    /* ----------------------------------------------------------------------------------------------- */
    /*! Функция вывода информации по занным флагам поля HotKeyFlags.
        @return void                                                                                   */
    /* ----------------------------------------------------------------------------------------------- */
    void parseHotKeyFlags();
    /* ----------------------------------------------------------------------------------------------- */
    /*! Функция вывода типа запуска файла по значению поля ShowCommand.
        @return void                                                                                   */
    /* ----------------------------------------------------------------------------------------------- */
    void parseShowCommand();

    // Check that structures are present
    /* ----------------------------------------------------------------------------------------------- */
    /*! Функиця проверки представленна ли в файле структура LinkTargetIDList.
        @return bool Возвращает true если представлена, false - если нет. */
    /* ----------------------------------------------------------------------------------------------- */
    bool HasLinkTargetIDListIsSet();
    /* ----------------------------------------------------------------------------------------------- */
    /*! Функиця проверки представленна ли в файле структура LinkInfo.
        @return bool Возвращает true если представлена, false - если нет. */
    /* ----------------------------------------------------------------------------------------------- */
    bool HasLinkInfoIsSet();
    /* ----------------------------------------------------------------------------------------------- */
    /*! Функиця проверки представленна ли в файле структура StringData.
        @return bool Возвращает true если представлена, false - если нет.                              */
    /* ----------------------------------------------------------------------------------------------- */
    bool HasStringDataIsSet();
    /* ----------------------------------------------------------------------------------------------- */
    /*! Функиця проверки установлен ли флаг HasNameSet.
        @return bool Возвращает true если установле, false - если нет.                                 */
    /* ----------------------------------------------------------------------------------------------- */
    static bool HasNameIsSet();
    /* ----------------------------------------------------------------------------------------------- */
    /*! Функиця проверки установлен ли флаг HasRelativePathSet.
        @return bool Возвращает true если установле, false - если нет.                                 */
    /* ----------------------------------------------------------------------------------------------- */
    static bool HasRelativePathIsSet();
    /* ----------------------------------------------------------------------------------------------- */
    /*! Функиця проверки установлен ли флаг HasWorkingDirSet.
        @return bool Возвращает true если установле, false - если нет.                                 */
    /* ----------------------------------------------------------------------------------------------- */
    static bool HasWorkingDirIsSet();
    /* ----------------------------------------------------------------------------------------------- */
    /*! Функиця проверки установлен ли флаг HasArgumentsSet.
        @return bool Возвращает true если установле, false - если нет.                                 */
    /* ----------------------------------------------------------------------------------------------- */
    static bool HasArgumentsIsSet();
    /* ----------------------------------------------------------------------------------------------- */
    /*! Функиця проверки установлен ли флаг HasIconLocationSet.
        @return bool Возвращает true если установле, false - если нет.                                 */
    /* ----------------------------------------------------------------------------------------------- */
    static bool HasIconLocationIsSet();

    /* For ExtraData structure */
    /* ----------------------------------------------------------------------------------------------- */
    /*! Функиця проверки установлен ли флаг HasDarwinIDSet.
        @return bool Возвращает true если установле, false - если нет.                                 */
    /* ----------------------------------------------------------------------------------------------- */
    static bool HasDarwinIDIsSet();
    /* ----------------------------------------------------------------------------------------------- */
    /*! Функиця проверки установлен ли флаг HasExpStringSet.
        @return bool Возвращает true если установле, false - если нет.                                 */
    /* ----------------------------------------------------------------------------------------------- */
    static bool HasExpStringIsSet();
    /* ----------------------------------------------------------------------------------------------- */
    /*! Функиця проверки установлен ли флаг HasExpIconSet.
        @return bool Возвращает true если установле, false - если нет.                                 */
    /* ----------------------------------------------------------------------------------------------- */
    static bool HasExpIconIsSet();
    /* ----------------------------------------------------------------------------------------------- */
    /*! Функиця проверки установлен ли флаг EnableTargetMetadataSet.
        @return bool Возвращает true если установле, false - если нет.                                 */
    /* ----------------------------------------------------------------------------------------------- */
    static bool EnableTargetMetadataIsSet();
    /* ----------------------------------------------------------------------------------------------- */
    /*! Функиця проверки установлен ли флаг RunWithShimLayerSet.
        @return bool Возвращает true если установле, false - если нет.                                 */
    /* ----------------------------------------------------------------------------------------------- */
    static bool RunWithShimLayerIsSet();
    /* ----------------------------------------------------------------------------------------------- */
    /*! Функиця проверки установлен ли флаг ForceNoLinkTrackSet.
        @return bool Возвращает true если установле, false - если нет.                                 */
    /* ----------------------------------------------------------------------------------------------- */
    static bool ForceNoLinkTrackIsSet();
};

#endif //LNK_JUMP_LIST_PARSER_SHELLLINKHEADER_H
